syntax = "proto3";
package match.v1;
option go_package = "github.com/optable/api/match/v1";

import "google/protobuf/timestamp.proto";
import "match/v1/identifier.proto";
import "match/v1/insights.proto";


message ExternalMatchRefreshOnce {
  // Exact time at which the refresh will ocurr
  google.protobuf.Timestamp at = 1;
}

message ExternalMatchRefreshDaily {
  // Time at which the refresh will start occuring
  google.protobuf.Timestamp start_at = 1;
  // Time at which the refresh will stop occuring
  google.protobuf.Timestamp end_at = 2;
}

message ExternalMatchRefreshAdhoc {
}

message CreateExternalMatchReq {
  // identifier shared between the two parties for matching
  string match_uid = 1;
  string name = 2;
  string description = 3;

  // Mostly for display concern,
  // since spawning runs is always controlled by the sender
  oneof refresh_frequency {
    ExternalMatchRefreshOnce once = 4;
    ExternalMatchRefreshDaily daily = 5;
    ExternalMatchRefreshAdhoc adhoc = 6;
  }

  // Subset of IdKind to use for matching. If empty, all IDs elligible for matching will be used.
  repeated IdKind identifiers_filter = 17;
}

message CreateExternalMatchRes {
  // This is the same match_uid as received in the request
  string match_uid = 1;
}

message ExternalMatch {
  string match_uid = 1;
  string name = 2;
  string description = 3;
  repeated ExternalMatchResult results = 4;
}

message ListExternalMatchReq {}

message ListExternalMatchRes {
  repeated ExternalMatch matches = 1;
}

message GetExternalMatchResultsReq {
  string match_uid = 1;
}

message GetExternalMatchResultsRes {
  repeated ExternalMatchResult results = 1;
}

message RunExternalMatchReq {
  string match_uid = 1;
  string match_result_uid = 2;
  string client_certificate_pem = 3;
  bool use_cleanroom = 4;
}

message RunExternalMatchRes {
  string match_result_uid = 1;
  string endpoint = 2;
  string server_certificate_pem = 3;
  string error_msg = 4;
  string cleanroom_id = 5;
}

message GetExternalMatchResultReq {
  string match_result_uid = 1;
}

message GetExternalMatchResultRes {
  ExternalMatchResult match_result = 1;
}

enum ExternalMatchResultState {
  EXTERNAL_MATCH_RESULT_STATE_UNKNOWN = 0;
  // The result is currently being computed
  EXTERNAL_MATCH_RESULT_STATE_PENDING = 1;
  // The result was properly computed and is no longer running
  EXTERNAL_MATCH_RESULT_STATE_COMPLETED = 2;
  // An error occurrend during the computation of that result
  // See error_msg field for details related to that error
  EXTERNAL_MATCH_RESULT_STATE_ERRORED = 3;
}

message ExternalMatchResult {
  string uid = 1;
  ExternalMatchResultState state = 2;
  string error_msg = 3;
  Insights insights = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message PauseExternalMatchReq {
  string match_uid = 1;
}

message ResumeExternalMatchReq {
  string match_uid = 1;
}

message LockExternalMatchReq {
  string match_uid = 1;
}

message UnlockExternalMatchReq {
  string match_uid = 1;
}

message ArchiveExternalMatchReq {
  string match_uid = 1;
}
