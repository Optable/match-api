syntax = "proto3";
package match.v1;
option go_package = "github.com/optable/api/match/v1";

import "google/protobuf/timestamp.proto";
import "match/v1/common.proto";


message DetailedInsights {
  Insights identifiers = 1;
  IdentifierCoverageInsights coverage = 2;
  repeated TraitInsightKey traits = 3;
}

message InsightsHistory {
  // Insights on a graph, after expansion

  // Latest computed insights ordered by computation date descendant
  repeated Insights trend = 1;
}

message Insights {
  google.protobuf.Timestamp computed_at = 1;

  // Number of connected components in the graph.
  int64 clusters = 2;
  int64 emails = 3;
  int64 apple_idfas = 4;
  int64 google_gaids = 5;
  int64 ipv4s = 6;
  int64 ipv6s = 7;
  int64 samsung_tifas = 8;
  int64 roku_ridas = 9;
  int64 amazon_afais = 10;
  int64 phone_numbers = 11;
}

message TraitInsightKey {
  string name = 1;
  repeated TraitInsightValue values = 2;
  int64 total_count = 3;
  float coverage = 4;
}

message TraitInsightValue {
  string name = 1;
  int64 count = 2;
  float coverage = 3;
}

message ListTraitInsightFactsReq {
  TraitInsightFactFilters filters = 1;
  int32 id = 2;
  repeated SortField sorts = 3; // Sorts is an array to be consistent with the rest of the services even though there is currently only one type of sort for this request
  string search = 4;
}

message ListUniverseTraitInsightFactsReq {
  TraitInsightFactFilters filters = 1;
  repeated SortField sorts = 2;
  string search = 3;
}

message ListTraitInsightFactsRes {
  repeated TraitInsightKey data = 1;
}

message TraitInsightFactFilters {
  repeated string keys = 1;

}

// Contains number of clusters, and the ratio of clusters that contains at least
// one of each of the identifier kinds
message IdentifierCoverageInsights {
  google.protobuf.Timestamp computed_at = 1;
  int32 id = 2;

  // Number of connected components in the graph.
  int64 clusters = 3;

  // The ratio is between 0 and 1, expressed as 0.5 for 50%
  double clusters_having_emails_ratio = 4;
  double clusters_having_apple_idfas_ratio = 5;
  double clusters_having_google_gaids_ratio = 6;
  double clusters_having_ipv4s_ratio = 7;
  double clusters_having_ipv6s_ratio = 8;
  double clusters_having_samsung_tifas_ratio = 9;
  double clusters_having_roku_ridas_ratio = 10;
  double clusters_having_amazon_afais_ratio = 11;
  double clusters_having_phone_numbers_ratio = 12;
}

message GetIdentifierCoverageInsightFactsReq {
  int32 id = 1;
}

message GetIdentifierCoverageInsightFactsRes {
  IdentifierCoverageInsights insights = 1;
}

message GetUniverseInsightFactsRes {
  Insights insights = 1;
}
